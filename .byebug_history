c
Question.first
[1,2,3].include?([1])
[1,2,3].includes?([1])
Topic.all.select {|topic| topic.name.downcase.match?("37")}.map {|topic| topic.id.to_s}
Topic.all.select {|topic| topic.name.downcase.match?("enter")}.map {|topic| topic.id.to_s}
Topic.all.select {|topic| topic.name.downcase.match?("enter")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("enter")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("e")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("life")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("lif")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("li")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.match?("Life")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.include?("Life")}.map {|topic| topic.id}
Topic.all.select {|topic| topic.name.include?("Life")}
Topic.all.map {|topic| topic.name}
Topic.all.select {|topic| topic.name.include?("life")}
Topic.all.select {|topic| topic.name.include?("lif")}
c
Question.all.select {|question| question.topics.include?(params[:value])}
params[:value]
n
up
u[
s
up
s
params[:field]
params
c
params[:field]
params
c
params
Question.all.select {|q| q["topics"].include?("43")}
Question.all.select {|q| q.topics.include?("43")}
Question.all.select {|q| q.topics.includes?("43")}
Question.all.select {|q| q.topics.includes?("43")
Question.find_by(id: 201)
Question.all.first
Question.find_by(id: 3)
params['field']
params
c
params
c
params
c
params
params[:id]
c
res
result
res = @question.save
result
@question
result - @question.save
@question.valid?
@question.valid
@question.errors.full_messages
@question
@question.save
@question
c
@question
c
up
s
up
s
up
s
up
s
c
params[:id]
question_params
c
params[:question][:topics]
params[:question]
question_params
params[:question]
params
question_params
params[:question]
question_params
params
c
params[:question]
params
question_params
c
question_params
params
c
@comment
c
comment_params
c
params.keys
params
c
comments_users
question_user
answers_users
answers_user
answer_user
exit
comments.map {|cmt| cmt.comment_author}.flatten
comments
comments = @answers.map {|ans| ans.comments}.flatten
@answers.map {|ans| ans.comments}.flatten
@answers.map {|ans| ans.comments}.last[B
@answers.map {|ans| ans.comments}.flatten
@answers.map {|ans| ans.comments}
@answers.first
@answers.comments
@answers.first.comments.first.comment_author
@answers.first.comments
@answers.first
@answers
c
params.keys
params
c
params
c
params
c
params
exit
users.length
users = @answers.map {|ans| ans.answer_author}.flatten.push @question.author
@answers.map {|ans| ans.answer_author}.flatten.push @question.author
 @question.author
@answers.map {|ans| ans.answer_author}.flatten
@answers.map {|ans| ans.answer_author}.flatten + @question.author
@question.author
@question
@answers
c
@answers.map {|ans| ans.answer_author}.flatten.length
@answers.map {|ans| ans.answer_author}.flatten
@answers.map {|ans| ans.answer_author}
@answers.map {|ans| ans.author}
@answers
@answers.authors
@answers.author
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params.permit(:answer)
params
c
question.answers.find_by(id: 2)
question.answers.find_by(id: 4)
question.answers
c
question.answers.find_by(id: 2)
question.answers
question
c
question.answers.empty?
question.answers ? 'true' : 'false'
question
question.answers[:id]
question.answers
question
c
question.answers
question
c
question.answers
question
c
params[:question_id]
params
c
params
c
params
c
params
question_params
c
params
question_params
c
